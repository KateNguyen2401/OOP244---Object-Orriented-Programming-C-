1. Because the operator+ just return the result but not change the original one so we just need a
copy of the value not the address of the variable.
2. The temporary objects were using when I used pass-by-reference paramater in overloading 
operartors
3. I wrapped the class in #ifndef and #endif statement. I use the public for all the function that I 
used in the main function and private for functions that i used in other function. Because the class 
author must use the public interface to expose the object's functionality to the client.
4. I learnt how to overload operator and what is its purpose

Quiz 4 reflection:
Question1: I cannot answer the question correctly. My correction:
a. Member operators are parts of class definition while helper operators are supporting but outside
the class definition.
b. Unary consists of one operand and one operator while a binary consists of one operator and 
two operands.
Question2:
a. A member function which allows the user to change the colour:
Colour Colour::set(short , short , short );
b.- Default constructor:
Colour::Colour(){
	red = -1;
	blue = -1;
	green = -1;
}
  - A constructor that allows the user the fully define the colour:
Colour::Colour(short r, short g, short b){
	set(r,g,b);
}
